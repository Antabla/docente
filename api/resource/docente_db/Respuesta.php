<?php /** 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://beta.skaffolder.com/#!/register?friend=5d1e567d0e8b622e6162666b
*
* You will get 10% discount for each one of your friends
* 
*/
?>
<?php
	require_once './db/dbdocente_dbManager.php';
	
/*
 * SCHEMA DB Respuesta
 * 
	{
		id_encuesta: {
			type: 'Integer', 
			required : true
		},
		id_estudiante: {
			type: 'Integer', 
			required : true
		},
		id_materia: {
			type: 'Integer', 
			required : true
		},
		id_profesor: {
			type: 'Integer', 
			required : true
		},
		valor_respuesta: {
			type: 'String'
		},
		//RELAZIONI
		
		
		//RELAZIONI ESTERNE
		
		
	}
 * 
 */


//CRUD METHODS


//CRUD - CREATE


$app->post('/respuesta',	function () use ($app){

	$body = json_decode($app->request()->getBody());
	
	$params = array (
		'id_encuesta'	=> $body->id_encuesta,
		'id_estudiante'	=> $body->id_estudiante,
		'id_materia'	=> $body->id_materia,
		'id_profesor'	=> $body->id_profesor,
		'valor_respuesta'	=> isset($body->valor_respuesta)?$body->valor_respuesta:'',
			);

	$obj = makeQuery("INSERT INTO respuesta (_id, id_encuesta, id_estudiante, id_materia, id_profesor, valor_respuesta )  VALUES ( null, :id_encuesta, :id_estudiante, :id_materia, :id_profesor, :valor_respuesta   )", $params, false);

	
	echo json_encode($body);
	
});
	
//CRUD - REMOVE

$app->delete('/respuesta/:id',	function ($id) use ($app){
	
	$params = array (
		'id'	=> $id,
	);

	makeQuery("DELETE FROM respuesta WHERE _id = :id LIMIT 1", $params);

});
	
//CRUD - GET ONE
	
$app->get('/respuesta/:id',	function ($id) use ($app){
	$params = array (
		'id'	=> $id,
	);
	
	$obj = makeQuery("SELECT * FROM respuesta WHERE _id = :id LIMIT 1", $params, false);
	
	
	
	echo json_encode($obj);
	
});
	
	
//CRUD - GET LIST

$app->get('/respuesta',	function () use ($app){
	makeQuery("SELECT * FROM respuesta");
});


//CRUD - EDIT

$app->post('/respuesta/:id',	function ($id) use ($app){

	$body = json_decode($app->request()->getBody());
	
	$params = array (
		'id'	=> $id,
		'id_encuesta'	    => $body->id_encuesta,
		'id_estudiante'	    => $body->id_estudiante,
		'id_materia'	    => $body->id_materia,
		'id_profesor'	    => $body->id_profesor,
		'valor_respuesta'	    => isset($body->valor_respuesta)?$body->valor_respuesta:''	);

	$obj = makeQuery("UPDATE respuesta SET  id_encuesta = :id_encuesta,  id_estudiante = :id_estudiante,  id_materia = :id_materia,  id_profesor = :id_profesor,  valor_respuesta = :valor_respuesta   WHERE _id = :id LIMIT 1", $params, false);

	
	echo json_encode($body);
    	
});


/*
 * CUSTOM SERVICES
 *
 *	These services will be overwritten and implemented in  Custom.js
 */

			
?>